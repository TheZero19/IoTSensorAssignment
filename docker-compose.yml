version: "3.8"

services:
  app:
    build: .
    container_name: iot-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      POSTGRES_USER: iotuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: iotdb
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SENSOR_REGISTRATION_API_KEY: CEROSKY
      SYNC_FACTOR: 10
  postgres:
    image: postgres:15
    container_name: iot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: iotuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: iotdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iotuser"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  redis:
    image: redis:7
    container_name: iot-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
volumes:
  postgres_data:
  redis_data: